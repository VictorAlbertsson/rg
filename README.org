#+TITLE: Rust Graphics
#+SUBTITLE: one-stop-shop API for graphical Rust applications
#+AUTHOR: Victor Albertsson
#+OPTIONS: num:nil toc:nil
* Outline
** Entrypoint
*** ~Core~ application struct
*** Layer framework
** Application layer
** Window layer
*** [[https://github.com/rust-windowing/winit][Winit]]

"/Cross-platform window creation and management in Rust/"

*** Input
*** Events
** Renderer

Initially the backend will be OpenGL, later I might switch to gfx-hal.

** Render API abstraction
** Debugging support
** Scripting language
*** [[https://github.com/murarth/ketos][Ketos]]

"/The primary goal of Ketos is to serve as a scripting and extension
language for programs written in the Rust programming language./"

** Memory systems
** Entity-component system (ECS)
** Physics
** File I/O, VFS
** Build system
*** Hotswapping assets
* Timeline
** TODO School project [0%]
   DEADLINE: <2020-06-05 Fri>
- [ ] Window and rudimentary input system
- [ ] Event system
- [ ] Basic rendering and UI
- [ ] Maybe a renderer?
** MVP (1.0.0) [0%]
- [ ] OpenGL renderer
- [ ] Unified windowing abstractions
- [ ] User input with cross-platform keycodes
- [ ] UI system (with debugging specific UI)
- [ ] Simple physics engine
** Product release (2.0.0) [0%]
- [ ] OpenGL, Vulkan, Metal, DirectX12 unified renderer
- [ ] Flexible and extensible event systems
- [ ] ECS (Entity-Component System)
- [ ] Scripting language
- [ ] Performant physics engine
- [ ] Concurrency and multithreading
- [ ] Asset management system
- [ ] Advanced input system with raycasters (2D + 3D + UI)
